#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

#!/bin/bash

echo -e "\033[37;1m🪝 Running Git Hooks: commit-msg\033[0m"
# コミットメッセージを定義
MSG="$(cat "$1")"
readonly MSG
# 終了コードを定義。0: OK 1: NG
code=0

# gitmojiの存在チェック
echo -en " - gitmojiの存在チェック: "
readonly GITMOJI="✨|🐛|📝|💄|♻️|⚡️|✅|🎨|🚀|🩹|🔥|🚚|🔧|🎉|🏷️"
if ! echo "$MSG" | grep -Eq "^(${GITMOJI}).*"; then
    echo -e "\033[31;22mNG"
    echo -e "================================================================"
    echo -e "コミットメッセージに有効なgitmojiが含まれていません。"
    echo -e ""
    echo -e "Valid gitmojis: ✨ 🐛 📝 💄 ♻️ ⚡️ ✅ 🎨 🚀 🩹 🔥 🚚 🔧 🎉 🏷️"
    echo -e "================================================================\033[0m\n"
    code=1
else
    echo -e "\033[32;22mOK\033[0m"
fi


# Prefixの存在チェック
echo -en " - Prefixの存在チェック: "
## 必要なPrefixを定義
readonly CORRECT_PREFIXES=('feat' 'fix' 'docs' 'style' 'refactor' 'perf' 'test' 'art' 'deploy' 'typo' 'fire' 'move' 'config' 'chore' 'revert' 'custom-type' 'start' 'type')
## 各要素に": "を追加
for i in "${!CORRECT_PREFIXES[@]}"; do
  correct_prefixes[i]="${CORRECT_PREFIXES[i]}: "
done
## `grep -E`で配列からOR検索をするため、半角スペース(" ")の区切り文字をパイプ("|")に変更
prefixes="$(
  IFS="|"
  echo "${correct_prefixes[*]}"
)"
if ! echo "$MSG" | grep -Eq "${prefixes}"; then
  echo -e "\033[31;22mNG"
  echo -e "================================================================"
  echo -e "コミットメッセージにPrefixが含まれていません。"
  echo -e ""
  echo -e "Prefix"
  echo -e "  ${correct_prefixes[*]}"
  echo -e "================================================================\033[0m\n"
  code=1
else
  echo -e "\033[32;22mOK\033[0m"
fi

# issue番号の存在チェック
echo -en " - issue番号の存在チェック: "
readonly ISSUE_NO="\#[1-9]"
if ! echo "$MSG" | grep -q "${ISSUE_NO}"; then
  echo -e "\033[31;22mNG"
  echo -e "================================================================"
  echo -e "コミットメッセージにissue番号が含まれていません。"
  echo -e ""
  echo -e "Example: #1234"
  echo -e "================================================================\033[0m\n"
  code=1
else
  echo -e "\033[32;22mOK\033[0m"
fi

# コミットメッセージ形式のチェック
echo -en " - コミットメッセージ形式のチェック: "
## 指定された形式の正規表現を定義します
readonly FORMAT_REGEX="^(${GITMOJI}) *(${prefixes}) *${ISSUE_NO} *.+"
if ! echo "$MSG" | grep -Eq "${FORMAT_REGEX}"; then
    echo -e "\033[31;22mNG"
    echo -e "================================================================"
    echo -e "コミットメッセージが指定された形式に従っていません。"
    echo -e ""
    echo -e "Expected Format: <gitmoji><Type>:<#issue番号><内容>"
    echo -e "Example: ✨feat: #1234 Implemented a new feature"
    echo -e "================================================================\033[0m\n"
    code=1
else
    echo -e "\033[32;22mOK\033[0m"
fi


# 終了宣言
if [ ${code} -eq 0 ]; then
  echo ""
  echo -e "\033[32;1m✨ALL PASS!!\033[0m\n\n"
else
  echo ""
  echo -e "\033[31;1mGit Hooks: commit-msg: NG\033[0m\n\n"
fi

exit ${code}

